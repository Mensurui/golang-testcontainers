name: Golang Testcontainers

on: [push, pull_request, workflow_dispatch]

jobs:
  Build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Golang
        uses: actions/setup-go@v4
        with: 
           go-version: '1.22'

      - name: Build Golang 
        run: go build -v ./...

      - name: Test Golang
        run: go test -v ./...

  BuildDocker:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker
        run: docker build . --file Dockerfile --tag gotest

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Dockerhub
        run: |
          docker tag gotest ${{ secrets.DOCKER_USERNAME }}/gotest:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gotest:latest

  Test:
    runs-on: ubuntu-latest
    needs: BuildDocker

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/gotest:latest

      - name: Install grpcurl
        run: |
          sudo apt-get update && sudo apt-get install -y grpcurl

      - name: Prepare Docker Compose
        run: |
          docker compose -f docker-compose.yml config

      - name: Start Service with Docker Compose
        run: |
          docker compose up -d

      - name: Check Application Health
        run: |
          sleep 10
          grpcurl -plaintext localhost:9191 protobuf.UserService.CheckHealth || exit 1

      - name: Stop and Remove Docker Containers
        run: |
          docker-compose down
