name: Golang Testcontainers

on: [push, pull_request, workflow_dispatch]

jobs:
  Build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Golang
        uses: actions/setup-go@v4
        with: 
           go-version: '1.22'

      - name: Build Golang 
        run: go build -v ./...

      - name: Test Golang
        run: go test -v ./...

  BuildDocker:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker
        run: docker build . --file Dockerfile --tag gotest

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Dockerhub
        run: |
          docker tag gotest ${{ secrets.DOCKER_USERNAME }}/gotest:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gotest:latest

  Test:
    runs-on: ubuntu-latest
    needs: BuildDocker

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/gotest:latest

      - name: Install grpcurl
        run: |
          curl -L https://github.com/fullstorydev/grpcurl/releases/download/v1.8.7/grpcurl_1.8.7_linux_x86_64.tar.gz -o grpcurl.tar.gz
          tar -xvf grpcurl.tar.gz
          sudo mv grpcurl /usr/local/bin

      - name: Install Docker Compose CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Build and Start Services
        run: |
          docker compose down
          docker compose up -d
          docker ps -a

#      - name: Prepare Docker Compose
#       run: |
#         docker compose -f docker-compose.yml config
#         docker ps -a

#      - name: Start Services with Docker Compose
#       run: |
#         docker compose down
#         docker compose up -d
#         docker compose logs goapp
#         for i in {1..60}; do
#           docker compose logs postgres | grep "database system is ready to accept connections" && break
#           sleep 1
#         done

      - name: Health Check
        run: |
          docker compose logs goapp
          docker logs goapp-1
          docker ps -a
          grpcurl -v -plaintext 0.0.0.0:9191 protobuf.UserService.CheckHealth || (docker compose logs && exit 1)

      - name: Stop and Remove Docker Containers
        run: |
          docker-compose down
